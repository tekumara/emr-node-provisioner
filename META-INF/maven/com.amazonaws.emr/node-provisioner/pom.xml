<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.amazonaws.emr</groupId>
  <artifactId>node-provisioner</artifactId>
  <version>2.18.0</version>
  <packaging>jar</packaging>

  <name>EMR Node Provisioner</name>
  <description>Provides provisioning of Bigtop distributions on the EMR Platform</description>

  <licenses>
    <license>
      <name>Amazon Software License</name>
      <url>https://aws.amazon.com/asl</url>
    </license>
  </licenses>

  <properties>
    <!-- Dependencies-->
    <commons-codec.version>1.9</commons-codec.version>
    <powermock.version>1.6.6</powermock.version>
    <commons-exec.version>1.3</commons-exec.version>
    <commons-io.version>2.4</commons-io.version>
    <commons-cli.version>1.3</commons-cli.version>
    <commons-lang3.version>3.4</commons-lang3.version>
    <ini4j.version>0.5.1</ini4j.version>
    <jackson.version>2.6.7</jackson.version>
    <jackson.databind.version>2.6.7.1</jackson.databind.version>
    <jgraph-core.version>0.9.1</jgraph-core.version>
    <joda-time.version>2.8.1</joda-time.version>
    <guava.version>18.0</guava.version>
    <google-http-client.version>1.20.0</google-http-client.version>
    <slf4j.version>1.7.12</slf4j.version>
    <snakeyaml.version>1.15</snakeyaml.version>
    <!-- Test Dependencies-->
    <junit.version>4.11</junit.version>
    <wiremock.version>1.55</wiremock.version>
    <httpclient.version>4.3.5</httpclient.version>
    <jsonassert.version>1.2.3</jsonassert.version>
    <!-- General Maven -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- Code Quality -->
    <checkstyle.plugin.version>2.17</checkstyle.plugin.version>
    <checkstyle.configuration>/google_checks.xml</checkstyle.configuration>
    <checkstyle.ignore.rules>javadoc,AbbreviationAsWordInName</checkstyle.ignore.rules>
    <cobertura.plugin.version>2.7</cobertura.plugin.version>
  </properties>

  <build>
    <sourceDirectory>src/main/java</sourceDirectory>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.5.1</version>
        <inherited>true</inherited>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.18.1</version>
        <configuration>
          <skipTests>false</skipTests>
          <systemPropertyVariables>
            <log4j.configuration>file:${project.build.testOutputDirectory}/log4j.properties</log4j.configuration>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <descriptor>src/assembly/bin.xml</descriptor>
          <tarLongFileMode>gnu</tarLongFileMode>
        </configuration>
        <executions>
          <execution>
            <id>create-archive</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${checkstyle.plugin.version}</version>
        <executions>
          <execution>
            <id>check-style</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <configLocation>${checkstyle.configuration}</configLocation>
              <failOnViolation>true</failOnViolation>
              <consoleOutput>true</consoleOutput>
              <linkXRef>false</linkXRef>
              <violationIgnore>${checkstyle.ignore.rules}</violationIgnore>
              <violationSeverity>warning</violationSeverity>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>${cobertura.plugin.version}</version>
        <configuration>
          <instrumentation>
            <ignoreTrivial>true</ignoreTrivial>
          </instrumentation>
          <check>
            <haltOnFailure>true</haltOnFailure>
            <branchRate>25</branchRate>
            <lineRate>30</lineRate>
            <totalBranchRate>81</totalBranchRate>
            <totalLineRate>86</totalLineRate>
            <packageLineRate>50</packageLineRate>
            <packageBranchRate>50</packageBranchRate>
            <regexes>
              <regex>
                <pattern>com.amazonaws.emr.node.provisioner.yum.*</pattern>
                <branchRate>0</branchRate>
                <lineRate>0</lineRate>
              </regex>
              <regex>
                <pattern>com.amazonaws.emr.node.provisioner.platform.model.Configuration.Builder</pattern>
                <branchRate>0</branchRate>
                <lineRate>0</lineRate>
              </regex>
              <regex>
                <pattern>com.amazonaws.emr.node.provisioner.ProgramOptionsParser</pattern>
                <branchRate>0</branchRate>
                <lineRate>0</lineRate>
              </regex>
              <regex>
                <pattern>com.amazonaws.emr.node.provisioner.config.*</pattern>
                <branchRate>0</branchRate>
                <lineRate>0</lineRate>
              </regex>
              <regex>
                <pattern>com.amazonaws.emr.node.provisioner.phase.*</pattern>
                <branchRate>0</branchRate>
                <lineRate>0</lineRate>
              </regex>
              <regex>
                <pattern>com.amazonaws.emr.node.provisioner.Program</pattern>
                <branchRate>0</branchRate>
                <lineRate>0</lineRate>
              </regex>
              <regex>
                <pattern>com.amazonaws.emr.node.provisioner.install.packaging.YumPackageInstaller</pattern>
                <branchRate>0</branchRate>
                <lineRate>0</lineRate>
              </regex>
              <regex>
                <pattern>com.amazonaws.emr.node.provisioner.platform.model.Configuration</pattern>
                <branchRate>0</branchRate>
                <lineRate>0</lineRate>
              </regex>
              <regex>
                <pattern>com.amazonaws.emr.node.provisioner.platform.pojo.InstanceType</pattern>
                <branchRate>0</branchRate>
                <lineRate>0</lineRate>
              </regex>
            </regexes>            
          </check>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>clean</goal>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons-codec.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-exec</artifactId>
      <version>${commons-exec.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>${commons-cli.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang3.version}</version>
    </dependency>

    <dependency>
      <groupId>org.ini4j</groupId>
      <artifactId>ini4j</artifactId>
      <version>${ini4j.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.databind.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jgrapht</groupId>
      <artifactId>jgrapht-core</artifactId>
      <version>${jgraph-core.version}</version>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${joda-time.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client</artifactId>
      <version>${google-http-client.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client-jackson</artifactId>
      <version>${google-http-client.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <version>${snakeyaml.version}</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock</artifactId>
      <version>${wiremock.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${httpclient.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.skyscreamer</groupId>
      <artifactId>jsonassert</artifactId>
      <version>${jsonassert.version}</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito2</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>   
    
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
        
  </dependencies>
  
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${checkstyle.plugin.version}</version>
        <configuration>
          <configLocation>${checkstyle.configuration}</configLocation>
          <linkXRef>false</linkXRef>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>${cobertura.plugin.version}</version>
        <configuration>
          <check></check>
          <formats>
            <format>html</format>
            <format>xml</format>
          </formats>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
</project>
